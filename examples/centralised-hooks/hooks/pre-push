#!/usr/bin/sh
#; C:/Program\ Files/Git/usr/bin/sh.exe
set -eu

# directory where the hook was triggered (your project)
CURRENT_DIRECTORY="$(pwd)"
# directory where the hook is running (your centralised hooks project)
GITHOOKS_DIRECTORY="$(dirname $(dirname $0))"
# bin directory depending on OS and ARCH
GITHOOKS_BIN_DIRECTORY="$GITHOOKS_DIRECTORY/bin/$(uname -s)/$(uname -m)"
# where custom hook are located in other projects (see repo-specific-hooks example)
CUSTOM_GITHOOKS_DIRECTORY="$CURRENT_DIRECTORY/.githook-companion/hooks"

echo "apply generic pre-push"


# apply custom git-hooks
if [ -d "$CUSTOM_GITHOOKS_DIRECTORY" ] && [ -f "$CUSTOM_GITHOOKS_DIRECTORY/pre-push" ]
then
  echo "apply custom pre-push"
  "$CUSTOM_GITHOOKS_DIRECTORY"/pre-push
fi

# make sure a clean state is being pushed
if [ -z "$(git status --porcelain)" ]; then
  # Working directory clean
  echo "clean state: proceed with push"
else
  # Uncommitted changes
  echo "you have uncommited changes: stopping the push"
  git status
  exit 1
fi
